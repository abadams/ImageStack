
# the components of imagestack

IMAGESTACK_OBJECTS = \
	Arithmetic.o \
	Alignment.o \
	Calculus.o \
	Color.o \
	Complex.o \
	Control.o \
	Convolve.o \
	Deconvolution.o \
	DFT.o \
	Display.o \
	DisplayWindow.o \
	Exception.o \
	File.o \
	FileEXR.o \
	FileCSV.o \
	FileHDR.o \
	FileJPG.o \
	FilePNG.o \
	FileTMP.o \
	FilePPM.o \
	FilePBA.o \
	FileTGA.o \
	FileTIFF.o \
	FileFLO.o \
	FileWAV.o \
	Filter.o \
	GaussTransform.o \
	Geometry.o \
	HDR.o \
	KernelEstimation.o \
	LAHBPCG.o \
	LightField.o \
        LocalLaplacian.o \
	Network.o \
	NetworkOps.o \
	Operation.o \
	Paint.o \
	Parser.o \
        Plugin.o \
	PatchMatch.o \
	Prediction.o \
	Stack.o \
	Statistics.o \
	Wavelet.o \
	WLS.o \
	main.o \


# This adds the appropriate defines for dependencies not included
SDL_CCFLAGS ?= -DNO_SDL
JPEG_CCFLAGS ?= -DNO_JPEG
TIFF_CCFLAGS ?= -DNO_TIFF
PNG_CCFLAGS ?= -DNO_PNG
FFTW_CCFLAGS ?= -DNO_FFTW
OPENEXR_CCFLAGS ?= -DNO_OPENEXR

##########################
# Top-level targets      #
##########################

all: prepare $(BIN_TARGET) library 

BIN_BUILD_DIR = bin/build/
LIB_BUILD_DIR = lib/build/
EXAMPLES_BUILD_DIR = examples/build/


$(BIN_BUILD_DIR):
	mkdir -p $(BIN_BUILD_DIR)
	@$(PRINT_OK)

$(LIB_BUILD_DIR):
	mkdir -p $(LIB_BUILD_DIR)
	@$(PRINT_OK)

$(EXAMPLES_BUILD_DIR):
	mkdir -p $(EXAMPLES_BUILD_DIR)
	@$(PRINT_OK)

prepare: $(BIN_BUILD_DIR) $(LIB_BUILD_DIR) $(EXAMPLES_BUILD_DIR)

# lib/*.* bin/build/*.* lib/build/*.* include/*.* && rm -rf
clean:
	rm -rf $(BIN_TARGET) $(BIN_BUILD_DIR) $(LIB_BUILD_DIR) $(EXAMPLES_BUILD_DIR)
	@$(PRINT_OK)

.PHONY: clean

##########################
# ImageStack the program #
##########################

$(BIN_TARGET): IMAGESTACK_CCFLAGS = $(BIN_CCFLAGS) $(SDL_CCFLAGS) $(JPEG_CCFLAGS) $(TIFF_CCFLAGS) $(PNG_CCFLAGS) $(FFTW_CCFLAGS) $(OPENEXR_CCFLAGS) 
$(BIN_TARGET): IMAGESTACK_LIBS = $(SDL_LIBS) $(JPEG_LIBS) $(TIFF_LIBS) $(PNG_LIBS) $(FFTW_LIBS) $(OPENEXR_LIBS)
BIN_OBJECTS = $(foreach f,$(IMAGESTACK_OBJECTS),bin/build/$f)

# Everything includes main.h. By precompiling that header we can speed up compilation about 30%
bin/build/main.pch: CMD = $(CXX) $(IMAGESTACK_CCFLAGS) -x c++-header -O3 -o bin/build/main.pch src/main.h

bin/build/main.pch: prepare src/main.h
	@$(BUILD_CMD)

$(BIN_TARGET): CMD = $(CXX) $(IMAGESTACK_CCFLAGS) $(BIN_OBJECTS) $(IMAGESTACK_LIBS) -o $(BIN_TARGET)

$(BIN_TARGET): $(BIN_OBJECTS)
	@$(BUILD_CMD)

bin/build/%.o: CMD = $(CXX) -include bin/build/main.h $(IMAGESTACK_CCFLAGS) -MMD -MP -MF bin/build/$*.d -MT $@ -c $< -o $@

bin/build/%.o: src/%.cpp bin/build/main.pch bin/build/ImageStack.h
	@$(BUILD_CMD)

bin/build/ImageStack.h:
	cp src/*.h bin/build/
	@$(PRINT_OK)

##########################
# ImageStack the library #
##########################

$(LIB_TARGET): IMAGESTACK_CCFLAGS = $(LIB_CCFLAGS) -DNO_MAIN $(SDL_CCFLAGS) $(JPEG_CCFLAGS) $(TIFF_CCFLAGS) $(PNG_CCFLAGS) $(FFTW_CCFLAGS) $(OPENEXR_CCFLAGS)
$(LIB_TARGET): IMAGESTACK_LIBS = $(SDL_LIBS) $(JPEG_LIBS) $(TIFF_LIBS) $(PNG_LIBS) $(FFTW_LIBS) $(OPENEXR_LIBS)
LIB_OBJECTS = $(foreach f,$(IMAGESTACK_OBJECTS),lib/build/$f)

library: $(LIB_TARGET) lib/build/ImageStack.h lib/build/main.pch

lib/build/main.pch: CMD = $(CXX) $(IMAGESTACK_CCFLAGS) -x c++-header -O3 -o lib/build/main.pch src/main.h

lib/build/main.pch: prepare src/main.h
	@$(BUILD_CMD)

$(LIB_TARGET): CMD = $(CXX) $(LIB_FLAGS) $(LIB_OBJECTS) -o $(LIB_TARGET) $(IMAGESTACK_LIBS)

$(LIB_TARGET): $(LIB_OBJECTS)
	@$(BUILD_CMD)

lib/build/%.o: CMD = $(CXX) -include lib/build/main.h $(IMAGESTACK_CCFLAGS) -c $< -o $@

lib/build/%.o: src/%.cpp lib/build/main.pch lib/build/ImageStack.h
	@$(BUILD_CMD)

lib/build/ImageStack.h:
	cp src/*.h lib/build/
	@$(PRINT_OK)

##########################
# ImageStack the example #
##########################

$(EXAMPLE_TARGET): IMAGESTACK_OBJECT = examples/build/ExamplePlugin.o
$(EXAMPLE_TARGET): IMAGESTACK_CCFLAGS = $(BIN_CCFLAGS) -c examples/plugin.cpp -o $(IMAGESTACK_OBJECT) -I src/
$(EXAMPLE_TARGET): IMAGESTACK_LDFLAGS = -o $(EXAMPLE_TARGET) -flavor darwin -arch x86_64 -dylib 

example: $(EXAMPLE_TARGET) $(LIB_TARGET) $(BIN_TARGET)

$(EXAMPLE_TARGET): CMD = $(LD) $(IMAGESTACK_OBJECT) $(IMAGESTACK_LDFLAGS)

$(EXAMPLE_TARGET): $(IMAGESTACK_OBJECT)
	$(LD) $(IMAGESTACK_OBJECT) $(IMAGESTACK_LDFLAGS)

$(IMAGESTACK_OBJECT): CMD = $(CXX) $(IMAGESTACK_CCFLAGS)

$(IMAGESTACK_OBJECT): prepare
	$(CXX) $(IMAGESTACK_CCFLAGS)


##########################
# Source Style Fixing    #
##########################

STYLE_OPTS = --indent=spaces=4 --brackets=attach --indent-labels --indent-preprocessor --indent-col1-comments --max-instatement-indent=60 --min-conditional-indent=0 --pad-header --unpad-paren --keep-one-line-blocks --keep-one-line-statements --convert-tabs --align-pointer=name --suffix=none --options=none

style:
	astyle $(STYLE_OPTS) `find . -name '[A-Za-z]*.h'` `find . -name '[A-Za-z]*.cpp'`